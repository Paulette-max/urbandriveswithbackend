'use strict';

const zod = require('zod');
require('better-call');
const account = require('../../shared/better-auth.BzKRBwSF.cjs');
require('../../shared/better-auth.DiSjtgs9.cjs');
require('@better-auth/utils/base64');
require('@better-auth/utils/hmac');
require('../../shared/better-auth.CHyZMcYK.cjs');
require('../../shared/better-auth.GpOOav9x.cjs');
require('defu');
require('../../cookies/index.cjs');
require('../../shared/better-auth.ANpbi45u.cjs');
require('../../shared/better-auth.C1hdVENX.cjs');
require('../../shared/better-auth.D3mtHEZg.cjs');
require('../../social-providers/index.cjs');
require('@better-fetch/fetch');
require('jose');
require('@better-auth/utils/hash');
require('../../shared/better-auth.DdjqxOIu.cjs');
require('@noble/ciphers/chacha');
require('@noble/ciphers/utils');
require('@noble/ciphers/webcrypto');
require('@noble/hashes/scrypt');
require('@better-auth/utils');
require('@better-auth/utils/hex');
require('@noble/hashes/utils');
require('../../shared/better-auth.CYeOI8C-.cjs');
require('@better-auth/utils/random');
require('../../shared/better-auth.GgQnT00n.cjs');
require('../../shared/better-auth.Bg6iw3ig.cjs');
require('../../shared/better-auth.BMYo0QR-.cjs');
require('../../shared/better-auth.DhfiEsxl.cjs');
require('jose/errors');
require('@better-auth/utils/binary');

const customSession = (fn, options) => {
  return {
    id: "custom-session",
    endpoints: {
      getSession: account.createAuthEndpoint(
        "/get-session",
        {
          method: "GET",
          metadata: {
            CUSTOM_SESSION: true
          },
          query: zod.z.optional(
            zod.z.object({
              /**
               * If cookie cache is enabled, it will disable the cache
               * and fetch the session from the database
               */
              disableCookieCache: zod.z.boolean({
                description: "Disable cookie cache and fetch session from database"
              }).or(zod.z.string().transform((v) => v === "true")).optional(),
              disableRefresh: zod.z.boolean({
                description: "Disable session refresh. Useful for checking session status, without updating the session"
              }).optional()
            })
          )
        },
        async (ctx) => {
          const session = await account.getSessionFromCtx(ctx);
          if (!session) {
            return ctx.json(null);
          }
          const fnResult = await fn(session);
          return ctx.json(fnResult);
        }
      )
    }
  };
};

exports.customSession = customSession;
